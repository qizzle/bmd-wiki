# Sample workflow for building and deploying a Next.js site to GitHub Pages using Bun
#
# To get started with Next.js see: https://nextjs.org/docs/getting-started
#
name: Deploy Next.js site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      # Removing configure-pages step as we have manual configuration in next.config.js
      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
            node_modules/.cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-bun-${{ hashFiles('**/package.json', '**/bun.lockb') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-bun-${{ hashFiles('**/package.json', '**/bun.lockb') }}-
            ${{ runner.os }}-nextjs-bun-
      - name: Install dependencies
        run: bun install --frozen-lockfile
      - name: Create static fallback for API routes
        run: |
          # Create a script to handle API routes for static export
          cat > ./fixApiRoutes.js << 'EOL'
          const fs = require('fs');
          const path = require('path');

          // Path to the API route file
          const apiRoutePath = './app/api/search/route.js';

          if (fs.existsSync(apiRoutePath)) {
            // Read the existing route file
            let content = fs.readFileSync(apiRoutePath, 'utf8');
            
            // Add the force-static directive at the top of the file
            if (!content.includes('export const dynamic = "force-static"')) {
              content = 'export const dynamic = "force-static";\n' + content;
              fs.writeFileSync(apiRoutePath, content);
              console.log(`Updated ${apiRoutePath} with force-static directive`);
            }
          } else {
            console.log(`API route file not found at ${apiRoutePath}`);
          }
          EOL

          # Run the script
          node ./fixApiRoutes.js
      - name: Build with Next.js
        run: bun run build
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
